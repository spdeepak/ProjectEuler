package com.deepaksp.projecteuler;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/**
 * ach new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
 * with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 * 
 * @author Deepak
 *
 */
public class Problem02 {

    public static void main(String[] args) {
        int n = 4_000_000;
        List<Integer> list = new ArrayList();
        for (int i = 1; i <= Integer.MAX_VALUE; i++) {
            int num = fibonacci(i);
            if (num <= 4_000_000) {
                list.add(fibonacci(i));
            } else {
                break;
            }
        }
        list.removeIf(i -> i % 2 == 0);
        System.out.println(list.stream()
                .collect(Collectors.partitioningBy(i -> i % 2 == 0, Collectors.summingInt(Integer::intValue)))
                .get(false));
    }

    private static Integer fibonacci(int i) {
        if (i == 1 || i == 2) {
            return 1;
        }
        return fibonacci(i - 1) + fibonacci(i - 2);
    }
}
